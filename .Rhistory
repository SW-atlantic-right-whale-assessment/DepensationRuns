dir.create(paste0("Model runs/Depensation_",i))
}
################################################################################
# Depensation model 5 - Hilborn et al 2014 w beta prior ----
################################################################################
file_name <- "Model runs/Depensation_5/Depensation_5"
sir_depensation5 <- list()
for(i in 1:2){
sir_depensation5[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 1,
n_resamples = 20000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8),
P50 = make_prior(rbeta, 1, 10)), # curve(dbeta(x, 1, 10), from = 0 ,to = 1)
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-05, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
resample_summary_reference <- summary_sir(sir_depensation5[[1]]$resamples_output, object = "Resample_Summary", file_name = file_name)
trajectory_summary_reference <- summary_sir(sir_depensation5[[1]]$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
save(sir_depensation5, file = paste0(file_name, ".Rdata"))
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation5[[1]],  file_name = file_name)
plot_trajectory(sir_depensation5[[2]],  file_name = paste0(file_name, "prior"))
plot_density(SIR = list(sir_depensation5[[1]]),  file_name = file_name,   priors = list(sir_depensation5[[2]]), inc_reference = FALSE)
#plot_ioa(sir_depensation5[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation5[[1]],  file_name = file_name)
################################################################################
# Depensation model 6 - Logistic w/ beta prior ----
################################################################################
file_name <- "Model runs/Depensation_6/Depensation_6"
sir_depensation6 <- list()
for(i in 1:2){
sir_depensation6[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 2,
n_resamples = 20000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8),
P50 = make_prior(rbeta, 1, 10)), # curve(dbeta(x, 1, 10), from = 0 ,to = 1)
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-05, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
resample_summary_reference <- summary_sir(sir_depensation6[[1]]$resamples_output, object = "Resample_Summary", file_name = file_name)
trajectory_summary_reference <- summary_sir(sir_depensation6[[1]]$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
save(sir_depensation6, file = paste0(file_name, ".Rdata"))
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation6[[1]],  file_name = file_name)
plot_trajectory(sir_depensation6[[2]],  file_name = paste0(file_name, "prior"))
plot_density(SIR = list(sir_depensation6[[1]]),  file_name = file_name,   priors = list(sir_depensation6[[2]]), inc_reference = FALSE)
#plot_ioa(sir_depensation6[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation6[[1]],  file_name = file_name)
################################################################################
# Depensation model 7 - Lin & Li 2002 w/ beta prior ----
################################################################################
file_name <- "Model runs/Depensation_7/Depensation_7"
sir_depensation7 <- list()
for(i in 1:2){
sir_depensation7[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 3,
n_resamples = 20000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.6, 0.8),
P50 = make_prior(rbeta, 1, 10)), # curve(dbeta(x, 1, 10), from = 0 ,to = 1)
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-05, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
resample_summary_reference <- summary_sir(sir_depensation7[[1]]$resamples_output, object = "Resample_Summary", file_name = file_name)
trajectory_summary_reference <- summary_sir(sir_depensation7[[1]]$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
save(sir_depensation7, file = paste0(file_name, ".Rdata"))
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation7[[1]],  file_name = file_name)
plot_trajectory(sir_depensation7[[2]],  file_name = paste0(file_name, "prior"))
plot_density(SIR = list(sir_depensation7[[1]]),  file_name = file_name,   priors = list(sir_depensation7[[2]]), inc_reference = FALSE)
#plot_ioa(sir_depensation7[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation7[[1]],  file_name = file_name)
################################################################################
# Depensation model 8 - Haider et al 2017 w/ beta prior ----
################################################################################
file_name <- "Model runs/Depensation_8/Depensation_8"
sir_depensation8 <- list()
for(i in 1:2){
sir_depensation8[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 4,
n_resamples = 20000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.6, 0.8),
P50 = make_prior(rbeta, 1, 10)), # curve(dbeta(x, 1, 10), from = 0 ,to = 1)
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-05, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
resample_summary_reference <- summary_sir(sir_depensation8[[1]]$resamples_output, object = "Resample_Summary", file_name = file_name)
trajectory_summary_reference <- summary_sir(sir_depensation8[[1]]$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
save(sir_depensation8, file = paste0(file_name, ".Rdata"))
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation8[[1]],  file_name = file_name)
plot_trajectory(sir_depensation8[[2]],  file_name = paste0(file_name, "prior"))
plot_density(SIR = list(sir_depensation8[[1]]),  file_name = file_name,   priors = list(sir_depensation8[[2]]), inc_reference = FALSE)
#plot_ioa(sir_depensation8[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation8[[1]],  file_name = file_name)
library(StateSpaceSIR)
library(EnvStats)
source("R/plot_surplus_prod_function.R")
source("R/plot_density_depensation.R")
source("R/plot_density.R")
################################################################################
# Base model
################################################################################
file_name <- "Model runs/Base2/Base2"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_base2[[1]],  file_name = file_name)
plot_trajectory(sir_base2[[2]],  file_name = paste0(file_name, "prior"))
# plot_abs_abundance(sir_base2[[1]],  file_name = file_name)
plot_density(SIR = sir_base2,  file_name = file_name, posteriors_lwd = c(3,1), posteriors_lty = rep(1, 2), posteriors_col = c(1,1))
plot_ioa(sir_base2[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_base2[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_base2[[1]]), file_name = file_name, model_names = "Base", coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 1 - Hilborn et al 2014
################################################################################
file_name <- "Model runs/Depensation_1/Depensation_1"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation1[[1]],  file_name = file_name)
plot_trajectory(sir_depensation1[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation1[[1]], sir_depensation1[[2]], sir_base2[[1]], sir_depensation1[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation1[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation1[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation1[[1]], sir_depensation1[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-1", "Dep-1 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 2 - Logistic
################################################################################
file_name <- "Model runs/Depensation_2/Depensation_2"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation2[[1]],  file_name = file_name)
plot_trajectory(sir_depensation2[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation2[[1]], sir_depensation2[[2]], sir_base2[[1]], sir_depensation2[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation2[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation2[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation2[[1]], sir_depensation2[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-2", "Dep-2 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 3 - Lin & Li 2002
################################################################################
file_name <- "Model runs/Depensation_3/Depensation_3"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation3[[1]],  file_name = file_name)
plot_trajectory(sir_depensation3[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation3[[1]], sir_depensation3[[2]], sir_base2[[1]], sir_depensation3[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation3[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation3[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation3[[1]], sir_depensation3[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-3", "Dep-3 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 4 - Haider et al 2017
################################################################################
file_name <- "Model runs/Depensation_4/Depensation_4"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation4[[1]],  file_name = file_name)
plot_trajectory(sir_depensation4[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation4[[1]], sir_depensation4[[2]], sir_base2[[1]], sir_depensation4[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation4[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation4[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation4[[1]], sir_depensation4[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-4", "Dep-4 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 5 - Hilborn et al 2014 w beta prior
################################################################################
file_name <- "Model runs/Depensation_5/Depensation_5"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation5[[1]],  file_name = file_name)
# plot_abs_abundance(sir_depensation5[[1]],  file_name = file_name)
plot_trajectory(sir_depensation5[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation5[[1]], sir_depensation5[[2]], sir_base2[[1]], sir_depensation5[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation5[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation5[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation5[[1]], sir_depensation5[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-1b", "Dep-1b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 6 - Logistic w/ beta prior
################################################################################
file_name <- "Model runs/Depensation_6/Depensation_6"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation6[[1]],  file_name = file_name)
plot_trajectory(sir_depensation6[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation6[[1]], sir_depensation6[[2]], sir_base2[[1]], sir_depensation6[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation6[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation6[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation6[[1]], sir_depensation6[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-2b", "Dep-2b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 7 - Lin & Li 2002 w/ beta prior
################################################################################
file_name <- "Model runs/Depensation_7/Depensation_7"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation7[[1]],  file_name = file_name)
plot_trajectory(sir_depensation7[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation7[[1]], sir_depensation7[[2]], sir_base2[[1]], sir_depensation7[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation7[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation7[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation7[[1]], sir_depensation7[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-3b", "Dep-3b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 8 - Haider et al 2017 w/ beta prior
################################################################################
file_name <- "Model runs/Depensation_8/Depensation_8"
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sir_depensation8[[1]],  file_name = file_name)
plot_trajectory(sir_depensation8[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation8[[1]], sir_depensation8[[2]], sir_base2[[1]], sir_depensation8[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
plot_ioa(sir_depensation8[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sir_depensation8[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation8[[1]], sir_depensation8[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-4", "Dep-4b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
library(StateSpaceSIR)
library(EnvStats)
library(plyr)
################################################################################
# Read in data ----
################################################################################
# -- Catch
sw_right_data<-read.delim("Data/datosModeloBallenasmiles2020Miles1648to2019.csv", sep=";",header=FALSE)
names(sw_right_data)<- c("Year","CatchMin","CatchMax","Nt")
sw_right_data <- rbind(sw_right_data, data.frame(Year = 2022:2023, CatchMin = 0, CatchMax = 0, Nt=0))
# Four periods of SLRs
# - Period 1: 1648-1770: SLR = 1
# - Period 2: 1771-1850: SLR ~ N(1.6, 0.04)
# - Period 3: 1851-1973: SLR ~ N(1.09, 0.04)
# - Period 4: 1974-Present: SLR = 1
catch_list <- list(sw_right_data[which(sw_right_data$Year < 1771),1:3],
sw_right_data[which(sw_right_data$Year >= 1771 & sw_right_data$Year <= 1850),1:3],
sw_right_data[which(sw_right_data$Year >= 1851 & sw_right_data$Year <= 1973),1:3],
sw_right_data[which(sw_right_data$Year > 1973),1:3])
# -- Absolute abundance
Abs.Abundance.2009 <- data.frame(Year = 2009, N.obs = 4029, CV.obs = NA) # FIXME: not used as of 4/24/21
Abs.Abundance.2010 <- data.frame(Year = 2010, N.obs = 4245, CV.obs = 245/4245) # 2010: 4245 (SE: 245, 95% CI 3,765, 4,725).
# -- Relative abundance
# - Index 1: Accumulated number of whales
sw_right_rel_abundance<-read.csv("Data/Accumulated_n_whales_1999_to_2023.csv")
Rel.Abundance.SWRight <- data.frame(Index = rep(1, nrow(sw_right_rel_abundance)),
Year = sw_right_rel_abundance$Year,
IA.obs = sw_right_rel_abundance$A_xy_mu_sim)
var_covar <- sw_right_rel_abundance[,paste0("X",1:20)]
colnames(var_covar) <- 1:20
Rel.Abundance.SWRight = cbind(Rel.Abundance.SWRight, var_covar)
for(i in 1:15){
dir.create(paste0("Model runs/Sensitivity_",i))
}
################################################################################
# Sensitivity 7 ----
################################################################################
file_name <- "Model runs/sensitivity_7/sensitivity_7"
# No struck and loss rates
sensitivity_7 <- list()
for(i in 1:2){
sensitivity_7[[i]] <-  StateSpaceSIR(
file_name = NULL,
n_resamples = 20000,
priors = make_prior_list(r_max = make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(1),
make_prior(1),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-5, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
resample_summary_reference <- summary_sir(sensitivity_7[[1]]$resamples_output, object = "Resample_Summary", file_name = file_name)
trajectory_summary_reference <- summary_sir(sensitivity_7[[1]]$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
save(sensitivity_7, file = paste0(file_name, ".Rdata"))
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sensitivity_7[[1]],  file_name = file_name)
plot_trajectory(sensitivity_7[[2]],  file_name = paste0(file_name, "prior"))
plot_density(SIR = list(sensitivity_7[[1]]),  file_name = file_name,   priors = list(sensitivity_7[[2]]), inc_reference = FALSE)
plot_ioa(sensitivity_7[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sensitivity_7[[1]],  file_name = file_name)
################################################################################
# Sensitivity 6 ----
################################################################################
file_name <- "Model runs/sensitivity_6/sensitivity_6"
# Nrecent is 2004
sensitivity_6 <- list()
for(i in 1:2){
sensitivity_6[[i]] <-  StateSpaceSIR(
file_name = NULL,
n_resamples = 20000,
priors = make_prior_list(r_max = make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2004,
num.haplotypes = 24,
output.Yrs = c(2021, 2023, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-5, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
resample_summary_reference <- summary_sir(sensitivity_6[[1]]$resamples_output, object = "Resample_Summary", file_name = file_name)
trajectory_summary_reference <- summary_sir(sensitivity_6[[1]]$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
save(sensitivity_6, file = paste0(file_name, ".Rdata"))
load(file = paste0(file_name, ".Rdata"))
plot_trajectory(sensitivity_6[[1]],  file_name = file_name)
plot_trajectory(sensitivity_6[[2]],  file_name = paste0(file_name, "prior"))
plot_density(SIR = list(sensitivity_6[[1]]),  file_name = file_name,   priors = list(sensitivity_6[[2]]), inc_reference = FALSE)
plot_ioa(sensitivity_6[[1]],  file_name = file_name, ioa_names = NULL )
summary_table(sensitivity_6[[1]],  file_name = file_name)
tinytex::reinstall_tinytex(repository = "illinois")
library(StateSpaceSIR)
library(kableExtra)
library(dplyr)
options(kableExtra.auto_format = FALSE)
mod_avg_table <- read.csv("Model runs/Model_average/Model_average_summary_table.csv")
# For plotting make a vector of bayes factors, set NA for models that cant be compared (different likelihood)
mod_avg_table <- read.csv("Model runs/Model_average/Model_average_summary_table.csv")
mod_avg_table
mod_avg_table[-c(8:10, 21),] %>%
rename(`2.5% CI` = `X2.5..CI`,
`25% CI` = `X25..CI`,
`75% CI` = `X75..CI`,
`97.5% CI` = `X97.5..CI`) %>%
dplyr::select(-X) %>%
kableExtra::kable(digits = 4) %>%
kable_classic(full_width = F)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
options(tinytex.verbose = TRUE)
library(StateSpaceSIR)
library(kableExtra)
library(dplyr)
options(tinytex.verbose = TRUE)
mod_avg_table <- read.csv("Model runs/Model_average/Model_average_summary_table.csv")
# For plotting make a vector of bayes factors, set NA for models that cant be compared (different likelihood)
mod_avg_table <- read.csv("Model runs/Model_average/Model_average_summary_table.csv")
mod_avg_table[-c(8:10, 21),] %>%
rename(`2.5% CI` = `X2.5..CI`,
`25% CI` = `X25..CI`,
`75% CI` = `X75..CI`,
`97.5% CI` = `X97.5..CI`) %>%
dplyr::select(-X) %>%
kableExtra::kable(digits = 4) %>%
kable_classic(full_width = F)
library(StateSpaceSIR)
library(kableExtra)
library(dplyr)
options(tinytex.verbose = TRUE)
options(kableExtra.auto_format = FALSE)
mod_avg_table <- read.csv("Model runs/Model_average/Model_average_summary_table.csv")
# Load data
balle<- read.csv ( "Data/SRW_aerial_survey_1999-2023.csv" , sep=";" , dec=".")
balle<- balle [c(-11,-12),] #11 y 12 (2004) vuelos con el aerocomander// esta es la seleccion de datos que hice para la los paràmetros para el nùmero de ballenas que dan la vuelta anualmente por PV
balle <- subset (balle, Year<2024) # Subset years
#### Variable Respuesta ############
balle$RTA <- (balle$T) # Total of observed whales
# Plot table
balle %>%
dplyr::select(nvuelo, Year, Mes, RTA, Juliano) %>%
mutate(Year = as.character(Year)) %>%
rename(Flight = nvuelo, Month = Mes, "Observed whales" = RTA, "Julian day" = Juliano ) %>%
kable(format.args = list(big.mark = ",")) %>%
kable_classic()
## Compare indices of relative abundance
sw_right_rel_abundance_2023 <- read.csv("Data/Accumulated_n_whales_1999_to_2023.csv")
sw_right_rel_abundance_2019 <- read.csv("Data/Accumulated_n_whales_1999_to_2019.csv")
# - Against one another
plot(x = sw_right_rel_abundance_2019$A_xy_mu_sim, y = sw_right_rel_abundance_2023$A_xy_mu_sim[1:17],
xlab = "1999-2019 Index", ylab = "1999-2023 Index")
# - Against one another
plot(x = sw_right_rel_abundance_2019$A_xy_mu_sim, y = sw_right_rel_abundance_2023$A_xy_mu_sim[1:17],
xlab = "1999-2019 Index", ylab = "1999-2023 Index", pch = 16)
abline(1,1, col = "grey")
abline(1,1, col = "grey", lwd = 1.5)
plot(x = sw_right_rel_abundance_2019$A_xy_mu_sim, y = sw_right_rel_abundance_2023$A_xy_mu_sim[1:17],
xlab = "1999-2019 Index", ylab = "1999-2023 Index", pch = 16)
abline(1,1, col = "grey", lwd = 1.5)
# - Against one another
plot(x = sw_right_rel_abundance_2019$A_xy_mu_sim, y = sw_right_rel_abundance_2023$A_xy_mu_sim[1:17],
xlab = "1999-2019 Index", ylab = "1999-2023 Index", pch = 16)
abline(1,1, col = "grey", lwd = 1.5)
# - On time-series
sw_right_rel_abundance_2019$Upper95 <- qlnorm(0.975, mean = log(sw_right_rel_abundance_2019$A_xy_mu_sim), sd = sqrt(sw_right_rel_abundance_2019$ln_A_xy_var_sim))
sw_right_rel_abundance_2019$Lower95 <- qlnorm(0.025, mean = log(sw_right_rel_abundance_2019$A_xy_mu_sim), sd = sqrt(sw_right_rel_abundance_2019$ln_A_xy_var_sim))
sw_right_rel_abundance_2023$Upper95 <- qlnorm(0.975, mean = log(sw_right_rel_abundance_2023$A_xy_mu_sim), sd = sqrt(sw_right_rel_abundance_2023$ln_A_xy_var_sim))
sw_right_rel_abundance_2023$Lower95 <- qlnorm(0.025, mean = log(sw_right_rel_abundance_2023$A_xy_mu_sim), sd = sqrt(sw_right_rel_abundance_2023$ln_A_xy_var_sim))
xlim <- range(c(sw_right_rel_abundance_2019$Year, sw_right_rel_abundance_2023$Year))
ylim <- range(c(sw_right_rel_abundance_2019$Upper95, sw_right_rel_abundance_2023$Upper95, sw_right_rel_abundance_2019$Lower95, sw_right_rel_abundance_2023$Lower95))
# - Plot
plot(NA, NA, ylim = ylim, xlim = xlim, xlab = "Year", ylab = "Index")
# Relative abundance
# - 2019
points( x = sw_right_rel_abundance_2019$Year-0.15,
y = sw_right_rel_abundance_2019$A_xy_mu_sim,
col = 1, pch = 16, cex = 2)
arrows( x0 = sw_right_rel_abundance_2019$Year-0.15,
y0 = sw_right_rel_abundance_2019$Lower95,
x1 = sw_right_rel_abundance_2019$Year-0.15,
y1 = sw_right_rel_abundance_2019$Upper95,
length=0.05, angle=90, code=3, lwd = 3, col = 1)
points( x = sw_right_rel_abundance_2023$Year+0.15,
y = sw_right_rel_abundance_2023$A_xy_mu_sim,
col = "grey", pch = 16, cex = 2)
arrows( x0 = sw_right_rel_abundance_2023$Year+0.15,
y0 = sw_right_rel_abundance_2019$Lower95,
x1 = sw_right_rel_abundance_2023$Year+0.15,
y1 = sw_right_rel_abundance_2023$Upper95,
length=0.05, angle=90, code=3, lwd = 3, col = "grey")
legend("topleft", c("1999-2019 Index", "1999-2023 Index"), bty = "n", col = c(1, "grey"), pch = 16, pt.cex = 2)
